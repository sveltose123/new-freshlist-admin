{"version":3,"sources":["../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js","redux/actions/todo/index.js","views/apps/todo/TodoSidebar.js","views/apps/todo/TodoList.js","views/apps/todo/TaskSidebar.js","views/apps/todo/Todo.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/FormGroup.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","props","_this","call","this","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","className","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","React","createElement","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","Component","defaultProps","defineProperty","module","exports","target","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","__esModule","getTodos","routeParams","dispatch","axios","get","params","then","result","type","todos","data","catch","err","console","log","completeTask","todo","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","TodoSidebar","Fragment","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","routerProps","location","pathname","connect","history","TodoList","handleUpdateTask","currentLocation","handleOnChange","e","searchTask","match","app","routerFilter","todosArr","filteredTodos","renderTodos","map","icon","label","checked","stopPropagation","onChange","title","tags","tag","trashTask","desc","FormGroup","Input","placeholder","routeParam","todoApp","getState","post","response","val","TaskSidebar","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","prevState","addTaskState","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","updateLabel","rows","updateTask","addNewTask","disabled","outline","task","mql","matchMedia","TODO","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","mediaQueryChanged","handleAddTask","status","undefined","handleUndoChanges","arr","addListener","removeListener","Consumer","context","direction","_excluded","propTypes","PropTypes","string","oneOfType","number","bsSize","valid","bool","invalid","tagPropType","innerRef","object","func","plaintext","addon","cssModule","_React$Component","getRef","focus","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","isNotaNumber","RegExp","Tag","formControlClass","warnOnce","classes","mapToCssModules","classNames","_extends","row","check","inline","CheckBoxesVuexy","defaultChecked"],"mappings":"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","file":"static/js/88.e650d6f0.chunk.js","sourcesContent":["import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty.js\");\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import axios from \"axios\"\r\nimport { history } from \"../../../history\"\r\n\r\nexport const getTodos = routeParams => {\r\n  return async dispatch => {\r\n    await axios\r\n      .get(\"api/apps/todo\", {\r\n        params: routeParams\r\n      })\r\n      .then(result => {\r\n        dispatch({\r\n          type: \"GET_TODOS\",\r\n          todos: result.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = todo => {\r\n  return dispatch => {\r\n    dispatch({ type: \"COMPLETE_TASK\", id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = todo => {\r\n  return dispatch => {\r\n    Promise.all([\r\n      dispatch({ type: \"STAR_TASK\", id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = todo => {\r\n  \r\n  return dispatch => {\r\n    Promise.all([\r\n      dispatch({ type: \"IMPORTANT_TASK\", id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = id => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post(\"/api/app/todo/trash-todo\", id)\r\n      .then(response => dispatch({ type: \"TRASH_TASK\", id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = todo => {\r\n  const request = axios.post(\"/api/apps/todo/update-todo\", todo)\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then(response => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: \"UPDATE_TODO\",\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (id, title, desc) => {\r\n  return dispatch => {\r\n    dispatch({ type: \"UPDATE_TASK\", id, title, desc })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: \"UPDATE_LABEL\", label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = task => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios.post(\"/api/apps/todo/new-task\", { task }).then(response => {\r\n      dispatch({ type: \"ADD_TASK\", task })\r\n      dispatch(getTodos(params))\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchTask = val => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_TASK\",\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = filter => {\r\n  return dispatch => {\r\n    dispatch({ type: \"CHANGE_FILTER\", filter })\r\n    history.push(`/todo/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Button, ListGroup, ListGroupItem } from \"reactstrap\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { X, Layers, Star, Info, Check, Trash } from \"react-feather\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeFilter } from \"../../../redux/actions/todo/index\"\r\nclass TodoSidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"todo-app-menu\">\r\n          <div className=\"add-task\">\r\n            <Button.Ripple\r\n              block\r\n              className=\"btn-block my-1\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.props.addTask(\"open\")\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              Add Task\r\n            </Button.Ripple>\r\n          </div>\r\n          <PerfectScrollbar\r\n            className=\"sidebar-menu-list\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0 pt-0\"\r\n                action\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"all\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/all\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Layers size={22} />\r\n                <span className=\"align-middle ml-1\">All</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"starred\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/starred\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Star size={22} />\r\n                <span className=\"align-middle ml-1\">Starred</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"important\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/important\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Info size={22} />\r\n                <span className=\"align-middle ml-1\">Important</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"completed\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/completed\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Check size={22} />\r\n                <span className=\"align-middle ml-1\">Completed</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"trashed\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/trashed\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Trash size={22} />\r\n                <span className=\"align-middle ml-1\">Trashed</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"frontend\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/frontend\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-primary align-middle\" />\r\n                <span className=\"align-middle ml-1\">Frontend</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"backend\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/backend\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-warning align-middle\" />\r\n                <span className=\"align-middle ml-1\">Backend</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"doc\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/doc\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-success align-middle\" />\r\n                <span className=\"align-middle ml-1\">Doc</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"bug\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/bug\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-danger align-middle\" />\r\n                <span className=\"align-middle ml-1\">Bug</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { changeFilter })(TodoSidebar)\r\n","import React from \"react\"\r\nimport { FormGroup, Input } from \"reactstrap\"\r\nimport { Menu, Search, Check, Info, Star, Trash } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from \"../../../redux/actions/todo/index\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nclass TodoList extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.app.todo.routeParam !== state.currentLocation) {\r\n      return {\r\n        todos: props.app.todo.todos\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    todos: [],\r\n    handleUpdateTask: null,\r\n    currentLocation: this.props.routerProps.location.pathname,\r\n    value: \"\"\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getTodos(this.props.routerProps.match.params)\r\n    this.setState({\r\n      todos: this.props.app.todo.todos,\r\n      handleUpdateTask: this.props.handleUpdateTask\r\n    })\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchTask(e.target.value)\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { todos, handleUpdateTask, value } = this.state\r\n    let routerFilter = this.props.routerProps.match.params.filter\r\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\r\n    let renderTodos =\r\n      todosArr.length > 0 ? (\r\n        todosArr.map((todo, i) => {\r\n          return (\r\n            <li\r\n              className={`todo-item ${todo.isCompleted ? \"completed\" : \"\"}`}\r\n              key={i}\r\n              onClick={() => {\r\n                handleUpdateTask(todo)\r\n              }}\r\n            >\r\n              <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\r\n                <div className=\"todo-title-area d-flex align-items-center\">\r\n                  <div className=\"title-wrapper d-flex\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      className=\"user-checkbox\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={\"\"}\r\n                      checked={todo.isCompleted}\r\n                      size=\"sm\"\r\n                      onClick={e => {\r\n                        e.stopPropagation()\r\n                        this.props.completeTask(todo)\r\n                      }}\r\n                      onChange={e => e.stopPropagation()}\r\n                    />\r\n                    <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\r\n                  </div>\r\n                  {todo.tags.length > 0 ? (\r\n                    <div className=\"chip-wrapper\">\r\n                      {todo.tags.map((tag, i) => (\r\n                        <div className=\"chip mb-0\" key={i}>\r\n                          <div className=\"chip-body\">\r\n                            <span className=\"chip-text\">\r\n                              <span\r\n                                className={`bullet bullet-${\r\n                                  tag === \"backend\"\r\n                                    ? \"warning\"\r\n                                    : tag === \"doc\"\r\n                                    ? \"success\"\r\n                                    : tag === \"bug\"\r\n                                    ? \"danger\"\r\n                                    : \"primary\"\r\n                                } bullet-xs`}\r\n                              />\r\n                              <span className=\"text-capitalize ml-25\">\r\n                                {tag}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div\r\n                  className={`todo-item-action d-flex ${\r\n                    routerFilter === \"trashed\" ? \"justify-content-end\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`todo-item-info d-inline-block ${\r\n                      routerFilter === \"trashed\" ? \"mr-1\" : \"mr-1 mr-sm-0\"\r\n                    }`}\r\n                    onClick={e => {\r\n                      e.stopPropagation()\r\n                      this.props.importantTask(todo)\r\n                    }}\r\n                  >\r\n                    <Info\r\n                      size={17}\r\n                      className={`${todo.isImportant ? \"text-success\" : \"\"}`}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\r\n                    onClick={e => {\r\n                      e.stopPropagation()\r\n                      this.props.starTask(todo)\r\n                    }}\r\n                  >\r\n                    <Star\r\n                      size={17}\r\n                      className={`${todo.isStarred ? \"text-warning\" : \"\"}`}\r\n                    />\r\n                  </div>\r\n                  {routerFilter !== \"trashed\" ? (\r\n                    <div\r\n                      className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\r\n                      onClick={e => {\r\n                        e.stopPropagation()\r\n                        this.props.trashTask(todo.id)\r\n                      }}\r\n                    >\r\n                      <Trash size={17} />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              {todo.desc.length > 0 ? (\r\n                <p className=\"todo-desc truncate mb-0\">{todo.desc}</p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n          )\r\n        })\r\n      ) : (\r\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n          No tasks at this time\r\n        </p>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"todo-app-area\">\r\n          <div className=\"todo-app-list-wrapper\">\r\n            <div className=\"todo-app-list\">\r\n              <div className=\"app-fixed-search\">\r\n                <div\r\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                  onClick={() => this.props.mainSidebar(true)}\r\n                >\r\n                  <Menu size={24} />\r\n                </div>\r\n                <FormGroup className=\"position-relative has-icon-left m-0 d-inline-block d-lg-block\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={e => this.handleOnChange(e)}\r\n                    value={value}\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Search size={15} />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"todo-task-list\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n              >\r\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(TodoList)\r\n","import React from \"react\"\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from \"reactstrap\"\r\nimport { X, Info, Star, Tag, Check } from \"react-feather\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from \"../../../redux/actions/todo/index\"\r\nclass TaskSidebar extends React.Component {\r\n\r\n  // static getDerivedStateFromProps (props, state){\r\n  //   if (\r\n  //    ( props.taskToUpdate !== null &&\r\n  //     props.taskToUpdate.title !== state.taskTitle) ||\r\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\r\n  //   ) {\r\n  //     let todosArr = props.app.todo.todos\r\n  //     let receivedTask =\r\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\r\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\r\n  //     let taskToUpdate, taskTitle, taskDesc\r\n  //     filteredTask.map(task => {\r\n  //       return (\r\n  //         (taskToUpdate = task),\r\n  //         (taskTitle = task.title),\r\n  //         (taskDesc = task.desc)\r\n  //       )\r\n  //     })\r\n  //     return {\r\n  //       taskToUpdate,\r\n  //       taskTitle,\r\n  //       taskDesc\r\n  //     }\r\n  //   }\r\n  //   return null\r\n  // }\r\n\r\n  state = {\r\n    taskToUpdate: null,\r\n    taskTitle: \"\",\r\n    taskDesc: \"\",\r\n    taskStatus : false,\r\n    taskStarred : false,\r\n    taskImportant  : false,\r\n    newTask: {\r\n      title: \"\",\r\n      desc: \"\",\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(\r\n      (this.props.taskToUpdate !== null && this.state.taskToUpdate !== this.props.taskToUpdate) || \r\n      (this.props.taskToUpdate !== null && this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\r\n      (this.props.taskToUpdate !== null && this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\r\n      (this.props.taskToUpdate !== null && this.state.taskImportant !== this.props.taskToUpdate.isImportant) \r\n      ){\r\n      this.setState({ \r\n        taskToUpdate : this.props.taskToUpdate, \r\n        taskTitle :  this.props.taskToUpdate.title,\r\n        taskDesc :  this.props.taskToUpdate.desc,\r\n        taskStatus : this.props.taskToUpdate.isCompleted,\r\n        taskStarred : this.props.taskToUpdate.isStarred,\r\n        taskImportant : this.props.taskToUpdate.isImportant\r\n      })\r\n    }\r\n    else{\r\n      return \r\n    }\r\n  }\r\n  \r\n\r\n\r\n  handleNewTaskTags = tag => {\r\n    let tagsArr = this.state.newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    this.setState({\r\n      ...this.state.newTask,\r\n      tags: tag\r\n    })\r\n  }\r\n\r\n  renderTags = taskArr => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === \"backend\"\r\n                  ? \"warning\"\r\n                  : tag === \"doc\"\r\n                  ? \"success\"\r\n                  : tag === \"bug\"\r\n                  ? \"danger\"\r\n                  : \"primary\"\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } = this.state\r\n\r\n    return (\r\n      <div\r\n        className={`task-sidebar ${\r\n          this.props.addTaskState === true ? \"show\" : \"\"\r\n        }`}\r\n      >\r\n        <div className=\"task-header\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"task-type-title text-bold-600\">\r\n              <h3>\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\r\n                  ? \"Update Task\"\r\n                  : \"Add Task\"}\r\n              </h3>\r\n            </div>\r\n            <div className=\"close-icon\">\r\n              <X\r\n                className=\"cursor-pointer\"\r\n                size={20}\r\n                onClick={() => this.props.addTask(\"close\")}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar>\r\n          <div className=\"task-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <div className=\"mark-complete\">\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && <Checkbox\r\n                  color=\"primary\"\r\n                  className=\"user-checkbox\"\r\n                  icon={<Check className=\"vx-icon\" size={15} />}\r\n                  label={\"\"}\r\n                  checked={ taskStatus }                  \r\n                  onChange={e =>  {\r\n                    this.props.completeTask(this.props.taskToUpdate)\r\n                  }}\r\n                />}\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <Info\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                      (this.props.taskToUpdate !== null && this.state.taskImportant) ||\r\n                      newTask.isImportant \r\n                      ? \"text-success\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null){\r\n                      this.props.importantTask(this.props.taskToUpdate)\r\n                    }\r\n                    else{\r\n                      this.setState({\r\n                        newTask : {\r\n                          ...this.state.newTask,\r\n                          isImportant : !this.state.newTask.isImportant\r\n                        }\r\n                      })\r\n                    }\r\n                      \r\n                  }}\r\n                />\r\n                <Star\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                      (this.props.taskToUpdate !== null  && this.state.taskStarred) ||\r\n                      newTask.isStarred \r\n                      ? \"text-warning\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null){\r\n                      this.props.starTask(this.props.taskToUpdate)\r\n                    }\r\n                    else{\r\n                      this.setState({\r\n                        newTask : {\r\n                          ...this.state.newTask,\r\n                          isStarred : !this.state.newTask.isStarred\r\n                        }\r\n                      })\r\n                    }\r\n                    \r\n                  }}\r\n                />\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle tag=\"span\">\r\n                    <Tag className=\"mr-50\" size={20} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu tag=\"ul\" right>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Frontend\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"frontend\") )||\r\n                            (newTask.tags.includes(\"frontend\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"frontend\")\r\n                          else this.handleNewTaskTags(\"frontend\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Backend\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"backend\"))||\r\n                            (newTask.tags.includes(\"backend\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"backend\")\r\n                            else this.handleNewTaskTags(\"backend\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Doc\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"doc\"))||\r\n                            (newTask.tags.includes(\"doc\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"doc\")\r\n                          else this.handleNewTaskTags(\"doc\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Bug\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"bug\"))||\r\n                            (newTask.tags.includes(\"bug\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"bug\")\r\n                          else this.handleNewTaskTags(\"bug\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </div>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\r\n                }\r\n                onChange={e => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskTitle : e.target.value\r\n                    })\r\n                  }else{\r\n                    this.setState({ newTask : {\r\n                      ...this.state.newTask,\r\n                      title : e.target.value\r\n                    } })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                rows=\"5\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                }\r\n                onChange={e => {\r\n                  if (this.props.taskToUpdate !== null){\r\n                    this.setState({\r\n                      taskDesc: e.target.value\r\n                    })\r\n                  }\r\n                  else{\r\n                    this.setState({ newTask : {\r\n                      ...this.state.newTask,\r\n                      desc : e.target.value\r\n                    } })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n              {this.props.taskToUpdate !== null &&\r\n              this.props.taskToUpdate.tags &&\r\n              this.props.taskToUpdate.tags.length > 0\r\n                ? this.renderTags(this.props.taskToUpdate.tags)\r\n                : null}\r\n            </div>\r\n\r\n            <hr className=\"my-2\" />\r\n            <div className=\"d-flex justify-content-end\">\r\n              <Button.Ripple\r\n                className=\"mr-50\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.props.updateTask(taskToUpdate.id, taskTitle, taskDesc)\r\n                  } else {\r\n                    this.props.addNewTask(this.state.newTask)\r\n                  }\r\n                  this.props.addTask(\"close\")\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: \"\",\r\n                      desc: \"\",\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n                disabled={\r\n                  taskTitle.length > 0 || newTask.title.length > 0\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                {taskToUpdate &&\r\n                taskToUpdate.id &&\r\n                this.props.taskToUpdate !== null\r\n                  ? \"Update\"\r\n                  : \"Add\"}\r\n              </Button.Ripple>\r\n              <Button.Ripple\r\n                color=\"light\"\r\n                outline\r\n                onClick={() => {\r\n                  this.props.addTask(\"close\")\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: \"\",\r\n                      desc: \"\",\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button.Ripple>\r\n            </div> \r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React from \"react\"\r\nimport Sidebar from \"react-sidebar\"\r\nimport { ContextLayout } from \"../../../utility/context/Layout\"\r\nimport TodoSidebar from \"./TodoSidebar\"\r\nimport TodoList from \"./TodoList\"\r\nimport TaskSidebar from \"./TaskSidebar\"\r\nimport \"../../../assets/scss/pages/app-todo.scss\"\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass TODO extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleAddTask = status => {\r\n    status === \"open\"\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null })\r\n  }\r\n  handleUpdateTask = todo => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo })\r\n    } else {\r\n      this.setState({ taskToUpdate: null })\r\n    }\r\n  }\r\n\r\n  handleUndoChanges = arr => {\r\n    this.setState({\r\n      prevState: arr\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-application position-relative\">\r\n        <div\r\n          className={`app-content-overlay ${\r\n            this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"\r\n          }`}\r\n          onClick={() => {\r\n            this.handleAddTask(\"close\")\r\n            this.onSetSidebarOpen(false)\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {context => (\r\n            <Sidebar\r\n              sidebar={\r\n                <TodoSidebar\r\n                  routerProps={this.props}\r\n                  addTask={this.handleAddTask}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n              touch={false}\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === \"rtl\"}>\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <TodoList\r\n          routerProps={this.props}\r\n          handleUpdateTask={this.handleUpdateTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          prevState={this.state.prevState}\r\n        />\r\n        <TaskSidebar\r\n          addTask={this.handleAddTask}\r\n          addTaskState={this.state.addTask}\r\n          taskToUpdate={this.state.taskToUpdate}\r\n          newTask={this.state.newTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          handleUndoChanges={this.handleUndoChanges}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TODO\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}