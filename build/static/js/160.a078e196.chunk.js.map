{"version":3,"sources":["components/reactstrap/badge/BadgeSourceCode.js","components/reactstrap/badge/BadgeContextual.js","components/reactstrap/badge/BadgeIcons.js","components/reactstrap/badge/BadgeSquareIcons.js","components/reactstrap/badge/BadgeIconOnly.js","components/reactstrap/badge/BadgeLink.js","components/reactstrap/badge/BadgeBlock.js","components/reactstrap/badge/BadgeSizes.js","components/reactstrap/badge/BadgeGlow.js","components/reactstrap/badge/BadgeLight.js","components/reactstrap/badge/Badge.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js"],"names":["badgeContextual","className","badgeGlow","badgeLight","badgeIcons","badgeSquareIcons","badgeIconsOnly","badgeLink","badgeBlock","badgeSizes","BadgeContextual","state","activeTab","toggleTab","tab","setState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","size","CardBody","TabContent","TabPane","tabId","Badge","color","React","Component","BadgeIcons","BadgeSquareIcons","BadgeIconsOnly","BadgeLink","href","BadgeBlock","BadgeSizes","BadgeGlow","BadgeLight","Badges","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","md","TabContext","createContext","t","n","util","clone","languages","javascript","e","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","content","map","join","g","length","o","i","type","tagName","pop","push","openedBraces","r","splice","Token","hooks","add","language","tokens","_excluded","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tagPropType","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","value","activeTabId","getClasses","Consumer","_ref"],"mappings":"uWAEaA,EACX,6BACE,0BAAMC,UAAU,gBAAc,ycAwBrBC,EACX,6BACE,0BAAMD,UAAU,gBAAc,ukBAwBrBE,EACX,6BACE,0BAAMF,UAAU,gBAAc,qbAuBrBG,EACX,6BACE,0BAAMH,UAAU,gBAAc,o5BA6CrBI,EACX,6BACE,0BAAMJ,UAAU,gBAAc,+9BA4CrBK,EACX,6BACE,0BAAML,UAAU,gBAAc,0wBAwCrBM,EACX,6BACE,0BAAMN,UAAU,gBAAc,yUAyBrBO,EACX,6BACE,0BAAMP,UAAU,gBAAc,+QAqBrBQ,EACX,6BACE,0BAAMR,UAAU,gBAAc,gkBCzKnBS,EAhFM,iKASlB,OATkB,oCACnBC,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EAqEA,OArEA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,8BACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,4CACgB,uCAAkB,SAAM,uCAAkB,8CAG1D,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,KACb,kBAACC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAAW,WAG5C,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAAW,WAG5C,kBAACgC,EAAA,EAAK,CAACC,MAAM,OAAOjC,UAAU,aAAW,QAGzC,kBAACgC,EAAA,EAAK,CAACC,MAAM,SAASjC,UAAU,aAAW,UAG3C,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAAW,WAG5C,kBAACgC,EAAA,EAAK,CAACC,MAAM,OAAOjC,UAAU,aAAW,SAI1C,kBAAC8B,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KAAKhC,WAM3D,EA9EkB,CAASmC,IAAMC,W,6CCsFrBC,EA9EC,iKASb,OATa,oCACd1B,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EAmEA,OAnEA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,yBACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,KACb,kBAACC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAC/B,kBAAC,IAAQ,CAAC2B,KAAM,KAChB,0CAEF,kBAACK,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAC/B,kBAAC,IAAS,CAAC2B,KAAM,KACjB,0CAEF,kBAACK,EAAA,EAAK,CAACC,MAAM,OAAOjC,UAAU,aAC5B,kBAAC,IAAO,CAAC2B,KAAM,KACf,uCAEF,kBAACK,EAAA,EAAK,CAACC,MAAM,SAASjC,UAAU,aAC9B,kBAAC,IAAM,CAAC2B,KAAM,KACd,yCAEF,kBAACK,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAC/B,kBAAC,IAAG,CAAC2B,KAAM,KACX,2CAGH,kBAACG,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KAAK5B,WAM3D,EA5Ea,CAAS+B,IAAMC,WCkFhBE,EAlFO,iKASnB,OATmB,oCACpB3B,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EAuEA,OAvEA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,sBACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,wCACY,+CAA0B,SAAM,uCAAkB,kCAG9D,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,KACb,kBAACC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,0BAC/B,kBAAC,IAAQ,CAAC2B,KAAM,KAChB,0CAEF,kBAACK,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,0BAC/B,kBAAC,IAAS,CAAC2B,KAAM,KACjB,0CAEF,kBAACK,EAAA,EAAK,CAACC,MAAM,OAAOjC,UAAU,0BAC5B,kBAAC,IAAO,CAAC2B,KAAM,KACf,uCAEF,kBAACK,EAAA,EAAK,CAACC,MAAM,SAASjC,UAAU,0BAC9B,kBAAC,IAAM,CAAC2B,KAAM,KACd,yCAEF,kBAACK,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,0BAC/B,kBAAC,IAAG,CAAC2B,KAAM,KACX,2CAGH,kBAACG,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KAAK3B,WAM3D,EAhFmB,CAAS8B,IAAMC,WCyEtBG,EAzEK,iKASjB,OATiB,oCAClB5B,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EA8DA,OA9DA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,kBACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,KACb,kBAACC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAC/B,kBAAC,IAAQ,CAAC2B,KAAM,MAElB,kBAACK,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAC/B,kBAAC,IAAS,CAAC2B,KAAM,MAEnB,kBAACK,EAAA,EAAK,CAACC,MAAM,OAAOjC,UAAU,aAC5B,kBAAC,IAAO,CAAC2B,KAAM,MAEjB,kBAACK,EAAA,EAAK,CAACC,MAAM,SAASjC,UAAU,aAC9B,kBAAC,IAAM,CAAC2B,KAAM,MAEhB,kBAACK,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,aAC/B,kBAAC,IAAG,CAAC2B,KAAM,OAGd,kBAACG,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KAAK1B,WAM3D,EAvEiB,CAAS6B,IAAMC,W,SCyDpBI,EAjEA,iKASZ,OATY,oCACb7B,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EAsDA,OAtDA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,mBACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,kCACM,0CAAqB,sCAE3B,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,IAAI/B,UAAU,iCAC3B,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUO,KAAK,IAAIxC,UAAU,aACxC,kBAAC,IAAI,CAAC2B,KAAM,KACZ,8CAGH,kBAACG,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KAAKzB,WAM3D,EA/DY,CAAS4B,IAAMC,WCqEfM,EArEC,iKASb,OATa,oCACd/B,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EA0DA,OA1DA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,oBACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,kCACM,wCAAmB,0CAEzB,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CACNC,MAAM,IACN/B,UAAU,uCAEV,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,SAC/B,+CAGJ,kBAAC8B,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KACvCxB,WAOd,EAnEa,CAAS2B,IAAMC,WCyEhBO,EAzEC,iKASb,OATa,oCACdhC,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EA8DA,OA9DA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,cACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAGjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,kCACM,sDAAiC,gCAEvC,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,KACb,kBAACC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,sBAC/B,8CAEF,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,sBAC/B,wCAEF,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,sBAC/B,yCAEF,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,sBAC/B,yCAGH,kBAAC8B,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KAAKvB,WAM3D,EAvEa,CAAS0B,IAAMC,WCgFhBQ,EAhFA,iKASZ,OATY,oCACbjC,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EAqEA,OArEA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,mBACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAEjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAEjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,wCACY,4CAAuB,SAAM,uCAAkB,yCAG3D,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,KACb,kBAACC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,wBAAsB,WAGvD,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,wBAAsB,WAGvD,kBAACgC,EAAA,EAAK,CAACC,MAAM,OAAOjC,UAAU,wBAAsB,QAGpD,kBAACgC,EAAA,EAAK,CAACC,MAAM,SAASjC,UAAU,wBAAsB,UAGtD,kBAACgC,EAAA,EAAK,CAACC,MAAM,UAAUjC,UAAU,wBAAsB,WAGvD,kBAACgC,EAAA,EAAK,CAACC,MAAM,OAAOjC,UAAU,mBAAiB,SAIjD,kBAAC8B,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KACvC9B,WAOd,EA9EY,CAASiC,IAAMC,WC6EfS,EA7EC,iKASb,OATa,oCACdlC,MAAQ,CACNC,UAAW,KACZ,EAEDC,UAAY,SAAAC,GACN,EAAKH,MAAMC,YAAcE,GAC3B,EAAKC,SAAS,CAAEH,UAAWE,KAE9B,EAkEA,OAlEA,mCAED,WAAU,IAAD,OACP,OACE,kBAAC,IAAME,SAAQ,KACb,kBAACC,EAAA,EAAI,KACH,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAS,qBACV,yBAAKlB,UAAU,SACb,kBAACmB,EAAA,EAAG,CAACC,MAAI,GACP,kBAACC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAEjB,kBAAC,IAAG,CAACe,KAAM,OAGf,kBAACN,EAAA,EAAO,KACN,kBAACC,EAAA,EAAO,CACNtB,UAAWuB,IAAW,CACpBC,OAAiC,MAAzBC,KAAKf,MAAMC,YAErBe,QAAS,WACP,EAAKd,UAAU,OAEjB,kBAAC,IAAI,CAACe,KAAM,UAMtB,kBAACC,EAAA,EAAQ,KACP,4CACgB,0DAAqC,QAAM,IACzD,uCAAkB,8CAEpB,kBAACC,EAAA,EAAU,CAAClB,UAAWc,KAAKf,MAAMC,WAChC,kBAACmB,EAAA,EAAO,CAACC,MAAM,KACb,kBAACC,EAAA,EAAK,CAACC,MAAM,gBAAgBjC,UAAU,wBAAsB,WAG7D,kBAACgC,EAAA,EAAK,CAACC,MAAM,gBAAgBjC,UAAU,wBAAsB,WAG7D,kBAACgC,EAAA,EAAK,CAACC,MAAM,aAAajC,UAAU,wBAAsB,QAG1D,kBAACgC,EAAA,EAAK,CAACC,MAAM,eAAejC,UAAU,wBAAsB,UAG5D,kBAACgC,EAAA,EAAK,CAACC,MAAM,gBAAgBjC,UAAU,wBAAsB,YAI/D,kBAAC8B,EAAA,EAAO,CAAC9B,UAAU,iBAAiB+B,MAAM,KACvC7B,WAOd,EA3Ea,CAASgC,IAAMC,W,kBCHzBU,G,OAAM,kHA+CT,OA/CS,8CACV,WACEC,IAAMC,iBACP,oBACD,WACE,OACE,kBAAC,IAAMhC,SAAQ,KACb,kBAACiC,EAAA,EAAW,CACVC,gBAAgB,SAChBC,iBAAiB,aACjBC,iBAAiB,WAEnB,kBAACC,EAAA,EAAG,KACF,kBAACC,EAAA,EAAG,CAACC,GAAG,MACN,kBAAC,EAAe,OAElB,kBAACD,EAAA,EAAG,CAACC,GAAG,MACN,kBAAC,EAAS,OAEZ,kBAACD,EAAA,EAAG,CAACC,GAAG,MACN,kBAAC,EAAU,OAEb,kBAACD,EAAA,EAAG,CAACC,GAAG,MACN,kBAAC,EAAU,OAEb,kBAACD,EAAA,EAAG,CAACC,GAAG,MACN,kBAAC,EAAgB,OAEnB,kBAACD,EAAA,EAAG,CAACC,GAAG,MACN,kBAAC,EAAc,QAGnB,kBAACF,EAAA,EAAG,KACF,kBAACC,EAAA,EAAG,CAACE,GAAG,IAAID,GAAG,MACb,kBAAC,EAAS,OAEZ,kBAACD,EAAA,EAAG,CAACE,GAAG,IAAID,GAAG,MACb,kBAAC,EAAU,QAGf,kBAACF,EAAA,EAAG,KACF,kBAACC,EAAA,EAAG,CAACC,GAAG,MACN,kBAAC,EAAU,aAKpB,EA/CS,CAASpB,IAAMC,YAiDZU,a,iCC/Df,6CAQWW,EARX,OAQqCtB,EAAMuB,cAAc,K,mBCRxD,SAASC,GAAG,IAAIC,EAAED,EAAEE,KAAKC,MAAMH,EAAEI,UAAUC,YAAYC,EAAE,0CAA0C,SAASC,EAAEP,EAAEC,GAAG,OAAOD,EAAEA,EAAEQ,QAAQ,QAAQ,WAAW,MAAM,iDAAiDA,QAAQ,aAAa,WAAW,MAAM,wDAAwDA,QAAQ,aAAa,WAAW,OAAOF,KAAKG,OAAOT,EAAEC,GAAGK,EAAEC,EAAED,GAAGI,OAAOV,EAAEI,UAAUO,IAAIX,EAAEI,UAAUQ,OAAO,SAASX,GAAGD,EAAEI,UAAUO,IAAIE,IAAIC,QAAQP,EAAE,gJAAgJP,EAAEI,UAAUO,IAAIE,IAAIE,OAAOF,IAAIC,QAAQ,iBAAiBd,EAAEI,UAAUO,IAAIE,IAAIE,OAAO,cAAcD,QAAQ,qEAAqEd,EAAEI,UAAUO,IAAIE,IAAIE,OAAOF,IAAIE,OAAO,cAAc,4BAA4Bf,EAAEI,UAAUO,IAAIE,IAAIE,OAAOC,QAAQf,EAAEe,QAAQhB,EAAEI,UAAUa,aAAa,SAAS,YAAY,CAACC,OAAO,CAACJ,QAAQP,EAAE,YAAYQ,OAAOf,EAAEI,UAAUO,MAAMX,EAAEI,UAAUO,IAAIE,KAAKb,EAAEI,UAAUa,aAAa,SAAS,eAAe,CAACE,OAAO,CAACL,QAAQP,EAAE,aAAaa,MAAM,sBAAsBL,OAAO,CAAC,qBAAqB,CAACD,QAAQ,WAAWM,MAAM,eAAeC,KAAKrB,EAAEI,UAAUO,OAAOX,EAAEI,UAAUO,IAAIE,KAAK,IAAIS,EAAE,SAAFA,EAAWtB,GAAG,OAAOA,EAAE,iBAAiBA,EAAEA,EAAE,iBAAiBA,EAAEuB,QAAQvB,EAAEuB,QAAQvB,EAAEuB,QAAQC,IAAIF,GAAGG,KAAK,IAAI,IAAIC,EAAE,SAAFA,EAAWzB,GAAG,IAAI,IAAIK,EAAE,GAAGC,EAAE,EAAEA,EAAEN,EAAE0B,OAAOpB,IAAI,CAAC,IAAIqB,EAAE3B,EAAEM,GAAGsB,GAAE,EAAG,GAAG,iBAAiBD,IAAI,QAAQA,EAAEE,MAAMF,EAAEL,QAAQ,IAAI,QAAQK,EAAEL,QAAQ,GAAGO,KAAK,OAAOF,EAAEL,QAAQ,GAAGA,QAAQ,GAAGA,QAAQjB,EAAEqB,OAAO,GAAGrB,EAAEA,EAAEqB,OAAO,GAAGI,UAAUT,EAAEM,EAAEL,QAAQ,GAAGA,QAAQ,KAAKjB,EAAE0B,MAAM,OAAOJ,EAAEL,QAAQK,EAAEL,QAAQI,OAAO,GAAGJ,SAASjB,EAAE2B,KAAK,CAACF,QAAQT,EAAEM,EAAEL,QAAQ,GAAGA,QAAQ,IAAIW,aAAa,IAAI5B,EAAEqB,OAAO,GAAG,gBAAgBC,EAAEE,MAAM,MAAMF,EAAEL,QAAQjB,EAAEA,EAAEqB,OAAO,GAAGO,eAAe5B,EAAEqB,OAAO,GAAGrB,EAAEA,EAAEqB,OAAO,GAAGO,aAAa,GAAG,gBAAgBN,EAAEE,MAAM,MAAMF,EAAEL,QAAQjB,EAAEA,EAAEqB,OAAO,GAAGO,eAAeL,GAAE,IAAKA,GAAG,iBAAiBD,IAAItB,EAAEqB,OAAO,GAAG,IAAIrB,EAAEA,EAAEqB,OAAO,GAAGO,aAAa,CAAC,IAAIC,EAAEb,EAAEM,GAAGrB,EAAEN,EAAE0B,OAAO,IAAI,iBAAiB1B,EAAEM,EAAE,IAAI,eAAeN,EAAEM,EAAE,GAAGuB,QAAQK,GAAGb,EAAErB,EAAEM,EAAE,IAAIN,EAAEmC,OAAO7B,EAAE,EAAE,IAAIA,EAAE,IAAI,iBAAiBN,EAAEM,EAAE,IAAI,eAAeN,EAAEM,EAAE,GAAGuB,QAAQK,EAAEb,EAAErB,EAAEM,EAAE,IAAI4B,EAAElC,EAAEmC,OAAO7B,EAAE,EAAE,GAAGA,KAAKN,EAAEM,GAAG,IAAIP,EAAEqC,MAAM,aAAaF,EAAE,KAAKA,GAAGP,EAAEL,SAAS,iBAAiBK,EAAEL,SAASG,EAAEE,EAAEL,WAAWvB,EAAEsC,MAAMC,IAAI,kBAAkB,SAASvC,GAAG,QAAQA,EAAEwC,UAAU,QAAQxC,EAAEwC,UAAUd,EAAE1B,EAAEyC,WAAh0E,CAA40ErD,Q,iCCA70E,yEAEIsD,EAAY,CAAC,YAAa,YAAa,OAAQ,QAAS,WAAY,aAAc,YAAa,OAAQ,SAAU,OAAQ,OAKzHC,EAAY,CACdjF,KAAMkF,IAAUC,KAChBC,MAAOF,IAAUC,KACjBE,SAAUH,IAAUI,UAAU,CAACJ,IAAUC,KAAMD,IAAUK,SACzDC,WAAYN,IAAUK,OACtBE,UAAWP,IAAUC,KACrBO,KAAMR,IAAUC,KAChBQ,OAAQT,IAAUC,KAClBS,KAAMV,IAAUC,KAChBhC,IAAK0C,cACLjH,UAAWsG,IAAUK,OACrBO,UAAWZ,IAAUa,QAiBnBhG,EAAM,SAAaiG,GACrB,IAAIpH,EAAYoH,EAAMpH,UAClBkH,EAAYE,EAAMF,UAClB9F,EAAOgG,EAAMhG,KACboF,EAAQY,EAAMZ,MACdC,EAAWW,EAAMX,SACjBG,EAAaQ,EAAMR,WACnBC,EAAYO,EAAMP,UAClBC,EAAOM,EAAMN,KACbC,EAASK,EAAML,OACfC,EAAOI,EAAMJ,KACbK,EAAMD,EAAM7C,IACZ+C,EAAaC,YAA8BH,EAAOhB,GAElDoB,EAAUC,0BAAgBC,IAAW1H,EAAW+G,EAAS,aAAe,QAAOH,GAAa,mBAAqBA,EAxBhG,SAA0BH,GAC/C,OAAiB,IAAbA,KAEoB,IAAbA,GAAkC,OAAbA,EACvB,cAGF,QAAUA,EAAW,WAiB6GkB,CAAiBlB,GAAW,CACnK,WAAYrF,EACZ,mBAAoB4F,GAAQ5F,EAC5B,YAAaoF,EACb,oBAAqBQ,GAAQR,EAC7B,gBAAiBK,EACjB,WAAYC,IACVI,GACJ,OAAoBhF,IAAM0F,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEtH,UAAWwH,MAIfrG,EAAIkF,UAAYA,EAChBlF,EAAI2G,aA3Ce,CACjBvD,IAAK,KACLkC,UAAU,GA0CGtF,O,iCChEf,mFAOIkF,EAAY,CACd9B,IAAK0C,cACLtG,UAAW2F,IAAUyB,IACrB/H,UAAWsG,IAAUK,OACrBO,UAAWZ,IAAUa,QAMnBtF,EAA0B,SAAUmG,GAatC,SAASnG,EAAWuF,GAClB,IAAIa,EAMJ,OAJAA,EAAQD,EAAWE,KAAKzG,KAAM2F,IAAU3F,MAClCf,MAAQ,CACZC,UAAWsH,EAAMb,MAAMzG,WAElBsH,EAqBT,OAxCAE,YAAetG,EAAYmG,GAE3BnG,EAAWuG,yBAA2B,SAAkCC,EAAWC,GACjF,OAAIA,EAAU3H,YAAc0H,EAAU1H,UAC7B,CACLA,UAAW0H,EAAU1H,WAIlB,MAaIkB,EAAW0G,UAEjBC,OAAS,WACd,IAAIC,EAAchH,KAAK2F,MACnBpH,EAAYyI,EAAYzI,UACxBkH,EAAYuB,EAAYvB,UACxBG,EAAMoB,EAAYlE,IAClB+C,EAAaoB,eAAKjH,KAAK2F,MAAOuB,OAAOC,KAAKvC,IAC1CmB,EAAUC,0BAAgBC,IAAW,cAAe1H,GAAYkH,GACpE,OAAoBhF,IAAM0F,cAAcpE,IAAWqF,SAAU,CAC3DC,MAAO,CACLC,YAAatH,KAAKf,MAAMC,YAEZuB,IAAM0F,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CAChEtH,UAAWwH,OAIR3F,EAzCqB,CA0C5BM,aAEaN,MACfA,EAAWwE,UAAYA,EACvBxE,EAAWiG,aAlDQ,CACjBvD,IAAK,Q,iCCdP,oHAEI6B,EAAY,CAAC,YAAa,YAAa,QAAS,OAMhDC,EAAY,CACd9B,IAAK0C,cACLjH,UAAWsG,IAAUK,OACrBO,UAAWZ,IAAUa,OACrBpF,MAAOuE,IAAUyB,KAKJ,SAASjG,EAAQsF,GAC9B,IAAIpH,EAAYoH,EAAMpH,UAClBkH,EAAYE,EAAMF,UAClBnF,EAAQqF,EAAMrF,MACdsF,EAAMD,EAAM7C,IACZ+C,EAAaC,YAA8BH,EAAOhB,GAElD4C,EAAa,SAAoBD,GACnC,OAAOtB,0BAAgBC,IAAW,WAAY1H,EAAW,CACvDwB,OAAQO,IAAUgH,IAChB7B,IAGN,OAAoBhF,IAAM0F,cAAcpE,IAAWyF,SAAU,MAAM,SAAUC,GAC3E,IAAIH,EAAcG,EAAKH,YACvB,OAAoB7G,IAAM0F,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEtH,UAAWgJ,EAAWD,SAI5BjH,EAAQuE,UAAYA,EACpBvE,EAAQgG,aAxBW,CACjBvD,IAAK","file":"static/js/160.a078e196.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport const badgeContextual = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeContextual extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\">Primary</Badge>\r\n      <Badge color=\"success\">Success</Badge>\r\n      <Badge color=\"info\">Info</Badge>\r\n      <Badge color=\"danger\">Danger</Badge>\r\n      <Badge color=\"warning\">Warning</Badge>\r\n      <Badge color=\"dark\">Dark</Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeContextual\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeGlow = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeGlow extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge className=\"badge-glow\" color=\"primary\">Primary</Badge>\r\n      <Badge className=\"badge-glow\" color=\"success\">Success</Badge>\r\n      <Badge className=\"badge-glow\" color=\"info\">Info</Badge>\r\n      <Badge className=\"badge-glow\" color=\"danger\">Danger</Badge>\r\n      <Badge className=\"badge-glow\" color=\"warning\">Warning</Badge>\r\n      <Badge className=\"badge-glow\" color=\"dark\">Dark</Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeGlow\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLight = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeLight extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"light-primary\">Primary</Badge>\r\n      <Badge color=\"light-success\">Success</Badge>\r\n      <Badge color=\"light-info\">Info</Badge>\r\n      <Badge color=\"light-danger\">Danger</Badge>\r\n      <Badge color=\"light-warning\">Warning</Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeLight\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeIcons = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\n\r\nclass BadgeIcons extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n        <Facebook size={12} />\r\n        <span>Primary</span>\r\n      </Badge>\r\n      <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n        <Instagram size={12} />\r\n        <span>Success</span>\r\n      </Badge>\r\n      <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n        <Twitter size={12} />\r\n        <span>Info</span>\r\n      </Badge>\r\n      <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n        <GitHub size={12} />\r\n        <span>Danger</span>\r\n      </Badge>\r\n      <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n        <Sun size={12} />\r\n        <span>Warning</span>\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeSquareIcons = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\nclass BadgeSquareIcons extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"mr-1 mb-1 badge-square\">\r\n        <Facebook size={12} />\r\n        <span>Primary</span>\r\n      </Badge>\r\n      <Badge color=\"success\" className=\"mr-1 mb-1 badge-square\">\r\n        <Instagram size={12} />\r\n        <span>Success</span>\r\n      </Badge>\r\n      <Badge color=\"info\" className=\"mr-1 mb-1 badge-square\">\r\n        <Twitter size={12} />\r\n        <span>Info</span>\r\n      </Badge>\r\n      <Badge color=\"danger\" className=\"mr-1 mb-1 badge-square\">\r\n        <GitHub size={12} />\r\n        <span>Danger</span>\r\n      </Badge>\r\n      <Badge color=\"warning\" className=\"mr-1 mb-1 badge-square\">\r\n        <Sun size={12} />\r\n        <span>Warning</span>\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeSquareIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeIconsOnly = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\n\r\nclass BadgeIconsOnly extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n        <Facebook size={12} />\r\n      </Badge>\r\n      <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n        <Instagram size={12} />\r\n      </Badge>\r\n      <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n        <Twitter size={12} />\r\n      </Badge>\r\n      <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n        <GitHub size={12} />\r\n      </Badge>\r\n      <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n        <Sun size={12} />\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeIconsOnly\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLink = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\nimport {\r\n  Link\r\n} from \"react-feather\"\r\n\r\nclass BadgeLink extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge href=\"#\" color=\"primary\">\r\n        <Link size={12} />\r\n        Link Badge\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeLink\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeBlock = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeBlock extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"block\">\r\n        Block Badge\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeBlock\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeSizes = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeSizes extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"badge-xl\">\r\n        <span>Extra Large</span>\r\n      </Badge>\r\n      <Badge color=\"primary\" className=\"badge-lg\">\r\n        <span>Large</span>\r\n      </Badge>\r\n      <Badge color=\"primary\" className=\"badge-md\">\r\n        <span>Medium</span>\r\n      </Badge>\r\n      <Badge color=\"primary\" className=\"badge-sm\">\r\n        <span>Small</span>\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeSizes\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeContextual } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeContextual extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Contextual variations</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use attribute <code>color</code> with <code>Badge</code> tag to\r\n              create badge with diffrent colors.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n                  Primary\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n                  Success\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n                  Info\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n                  Danger\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n                  Warning\r\n                </Badge>\r\n                <Badge color=\"dark\" className=\"mr-1 mb-1\">\r\n                  Dark\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeContextual}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeContextual\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\nimport { badgeIcons } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeIcons extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Icons variations</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n                  <Facebook size={12} />\r\n                  <span>Primary</span>\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n                  <Instagram size={12} />\r\n                  <span>Success</span>\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n                  <Twitter size={12} />\r\n                  <span>Info</span>\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n                  <GitHub size={12} />\r\n                  <span>Danger</span>\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n                  <Sun size={12} />\r\n                  <span>Warning</span>\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeIcons}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeIcons\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\nimport { badgeSquareIcons } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeSquareIcons extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Square Badges</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.badge-square</code> with <code>Badge</code> tag\r\n              to create a square badge.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"mr-1 mb-1 badge-square\">\r\n                  <Facebook size={12} />\r\n                  <span>Primary</span>\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"mr-1 mb-1 badge-square\">\r\n                  <Instagram size={12} />\r\n                  <span>Success</span>\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"mr-1 mb-1 badge-square\">\r\n                  <Twitter size={12} />\r\n                  <span>Info</span>\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"mr-1 mb-1 badge-square\">\r\n                  <GitHub size={12} />\r\n                  <span>Danger</span>\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"mr-1 mb-1 badge-square\">\r\n                  <Sun size={12} />\r\n                  <span>Warning</span>\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeSquareIcons}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeSquareIcons\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\nimport { badgeIconsOnly } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeIconsOnly extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Icon Only</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n                  <Facebook size={12} />\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n                  <Instagram size={12} />\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n                  <Twitter size={12} />\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n                  <GitHub size={12} />\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n                  <Sun size={12} />\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeIconsOnly}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeIconsOnly\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, Link } from \"react-feather\"\r\nimport { badgeLink } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeLink extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Link Badge</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use <code>href=\"#\"</code> attribute to use badge as a link.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\" className=\"d-flex justify-content-center\">\r\n                <Badge color=\"primary\" href=\"#\" className=\"mr-1 mb-1\">\r\n                  <Link size={12} />\r\n                  <span>Link Badge</span>\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeLink}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeLink\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeBlock } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeBlock extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Block Badge</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use <code>.block</code> class to make badge display as block.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane\r\n                tabId=\"1\"\r\n                className=\"w-100 d-flex justify-content-center\"\r\n              >\r\n                <Badge color=\"primary\" className=\"block\">\r\n                  <span>Block Badge</span>\r\n                </Badge>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {badgeBlock}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeBlock\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeSizes } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeSizes extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Sizes</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use <code>.badge-[sm/md/lg/xl]</code> class to change badge size.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"badge-xl mr-1 mb-1\">\r\n                  <span>Extra Large</span>\r\n                </Badge>\r\n                <Badge color=\"primary\" className=\"badge-lg mr-1 mb-1\">\r\n                  <span>Large</span>\r\n                </Badge>\r\n                <Badge color=\"primary\" className=\"badge-md mr-1 mb-1\">\r\n                  <span>Medium</span>\r\n                </Badge>\r\n                <Badge color=\"primary\" className=\"badge-sm mr-1 mb-1\">\r\n                  <span>Small</span>\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeSizes}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeSizes\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeGlow } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeGlow extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Badge Glow</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}>\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}>\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>badge-glow</code> with <code>Badge</code> tag to\r\n              add glow effect to your badge\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"badge-glow mr-1 mb-1\">\r\n                  Primary\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"badge-glow mr-1 mb-1\">\r\n                  Success\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"badge-glow mr-1 mb-1\">\r\n                  Info\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"badge-glow mr-1 mb-1\">\r\n                  Danger\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"badge-glow mr-1 mb-1\">\r\n                  Warning\r\n                </Badge>\r\n                <Badge color=\"dark\" className=\"badge-glow mb-1\">\r\n                  Dark\r\n                </Badge>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {badgeGlow}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeGlow\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeLight } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeLight extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Light Badges</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}>\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}>\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use attribute <code>color=\"light-COLOR_NAME\"</code> with{\" \"}\r\n              <code>Badge</code> tag to create badge with diffrent colors.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"light-primary\" className=\"badge-glow mr-1 mb-1\">\r\n                  Primary\r\n                </Badge>\r\n                <Badge color=\"light-success\" className=\"badge-glow mr-1 mb-1\">\r\n                  Success\r\n                </Badge>\r\n                <Badge color=\"light-info\" className=\"badge-glow mr-1 mb-1\">\r\n                  Info\r\n                </Badge>\r\n                <Badge color=\"light-danger\" className=\"badge-glow mr-1 mb-1\">\r\n                  Danger\r\n                </Badge>\r\n                <Badge color=\"light-warning\" className=\"badge-glow mr-1 mb-1\">\r\n                  Warning\r\n                </Badge>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {badgeLight}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeLight\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport BadgeContextual from \"./BadgeContextual\"\r\nimport BadgeIcons from \"./BadgeIcons\"\r\nimport BadgeSquareIcons from \"./BadgeSquareIcons\"\r\nimport BadgeIconsOnly from \"./BadgeIconOnly\"\r\nimport BadgeLink from \"./BadgeLink\"\r\nimport BadgeBlock from \"./BadgeBlock\"\r\nimport BadgeSizes from \"./BadgeSizes\"\r\nimport BadgeGlow from \"./BadgeGlow\"\r\nimport BadgeLight from \"./BadgeLight\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Badges extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Badges\"\r\n          breadCrumbParent=\"Components\"\r\n          breadCrumbActive=\"Badges\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <BadgeContextual />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeGlow />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeLight />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeIcons />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeSquareIcons />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeIconsOnly />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <BadgeLink />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <BadgeBlock />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <BadgeSizes />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Badges\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;"],"sourceRoot":""}