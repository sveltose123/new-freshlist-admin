{"version":3,"sources":["views/tables/reactstrap/TableSourceCode.js","views/tables/reactstrap/TableBasic.js","views/tables/reactstrap/TableInverse.js","views/tables/reactstrap/TableHead.js","views/tables/reactstrap/TableHoverAnimation.js","views/tables/reactstrap/TableStriped.js","views/tables/reactstrap/TableStripedDark.js","views/tables/reactstrap/TableBordered.js","views/tables/reactstrap/TableBorderless.js","views/tables/reactstrap/TableHover.js","views/tables/reactstrap/TableContextual.js","views/tables/reactstrap/TableResponsive.js","views/tables/reactstrap/Tables.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/Table.js"],"names":["tableBasic","className","tableInverse","tableHeadOption","tableHoverAnimation","tableStriped","tableStripedDark","tableBordered","tableBorderless","tableHover","tableContextual","tableResponsive","TableBasic","state","activeTab","toggleTab","tab","setState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","size","CardBody","TabContent","TabPane","tabId","Table","responsive","scope","React","Component","TableInverse","dark","TableHeadOption","TableHoverAnimation","TableStriped","striped","TableStripedDark","TableBordered","bordered","TableBorderless","borderless","TableHover","hover","TableContextual","TableResponsive","Tables","prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","TableHead","TabContext","createContext","t","n","util","clone","languages","javascript","e","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","content","map","join","g","length","o","i","type","tagName","pop","push","openedBraces","r","splice","Token","hooks","add","language","tokens","Prism","propTypes","tagPropType","PropTypes","any","string","cssModule","object","_Component","props","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","Tag","attributes","omit","Object","keys","classes","mapToCssModules","classNames","createElement","Provider","value","activeTabId","_extends","defaultProps","_excluded","_objectWithoutPropertiesLoose","getClasses","Consumer","_ref","bool","pills","vertical","oneOfType","horizontal","justified","fill","navbar","card","getVerticalClass","responsiveTag","innerRef","func","ResponsiveTag","table","ref","responsiveClassName"],"mappings":"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","file":"static/js/138.48b475e1.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nexport const tableBasic = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableBasic extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableBasic\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableInverse = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableInverse extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table responsive dark>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n\r\n        <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableInverse\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableHeadOption = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableHeadOption extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table responsive>\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableHeadOption\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableHoverAnimation = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableHoverAnimation extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table className=\"table-hover-animation\" responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableHoverAnimation\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableStriped = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableStriped extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table striped responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableStriped\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableStripedDark = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableStripedDark extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table striped dark responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableStripedDark\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableBordered = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableBordered extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table bordered responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableBordered\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableBorderless = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableBorderless extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table borderless responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableBorderless\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableHover = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableHover extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableHover\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableContextual = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableContextual extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr className=\"table-active\">\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr className=\"table-primary\">\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr className=\"table-success\">\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n          <tr className=\"table-info\">\r\n            <th scope=\"row\">4</th>\r\n            <td>Adam</td>\r\n            <td>the adam</td>\r\n            <td>@adam</td>\r\n          </tr>\r\n          <tr className=\"table-danger\">\r\n            <th scope=\"row\">5</th>\r\n            <td>Jennifer</td>\r\n            <td>the jennifer</td>\r\n            <td>@instagram</td>\r\n          </tr>\r\n          <tr className=\"table-warning\">\r\n            <th scope=\"row\">6</th>\r\n            <td>Rick</td>\r\n            <td>the rick</td>\r\n            <td>@facebook</td>\r\n          </tr>\r\n          <tr className=\"table-light\">\r\n            <th scope=\"row\">7</th>\r\n            <td>Ellie</td>\r\n            <td>the ellie</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n          <tr className=\"table-dark\">\r\n            <th scope=\"row\">8</th>\r\n            <td>Lana</td>\r\n            <td>the lana</td>\r\n            <td>@instagram</td>\r\n          </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableContextual\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const tableResponsive = (\r\n  <pre className=\"language-jsx\">\r\n    <code className=\"language-jsx\">\r\n      {`\r\n  import React from \"react\"\r\n  import { Table } from \"reactstrap\"\r\n\r\n  class TableResponsive extends React.Component {\r\n    render() {\r\n      return  (\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Table heading</th>\r\n              <th>Table heading</th>\r\n              <th>Table heading</th>\r\n              <th>Table heading</th>\r\n              <th>Table heading</th>\r\n              <th>Table heading</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n              <td>Table cell</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n  export default TableResponsive\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableBasic } from \"./TableSourceCode\"\r\n\r\nclass TableBasic extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Table Basic</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableBasic}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableBasic\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableInverse } from \"./TableSourceCode\"\r\n\r\nclass TableInverse extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Inverse</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.table-inverse</code> or prop <code>dark</code>{\" \"}\r\n              with table tag to create a inverse table\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table responsive className=\"table-inverse\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n                <h4 className=\"my-1\">Dark</h4>\r\n                <Table responsive dark>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableInverse}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableInverse\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableHeadOption } from \"./TableSourceCode\"\r\n\r\nclass TableHeadOption extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Table head option</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.thead-dark</code> with thead tag for dark head.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table responsive>\r\n                  <thead className=\"thead-dark\">\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableHeadOption}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableHeadOption\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableHoverAnimation } from \"./TableSourceCode\"\r\n\r\nclass TableHoverAnimation extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Table Hover Animation</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.table-hover-animation</code> with table tag to\r\n              enable a hover stat with animation on table rows.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table className=\"table-hover-animation\" responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableHoverAnimation}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableHoverAnimation\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableStriped } from \"./TableSourceCode\"\r\n\r\nclass TableStriped extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Striped</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>striped</code> with table tag for striped table.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table striped responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableStriped}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableStriped\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableStripedDark } from \"./TableSourceCode\"\r\n\r\nclass TableStripedDark extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Striped Dark</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>striped</code> and <code>dark</code> with table tag\r\n              for striped table.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table striped dark responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableStripedDark}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableStripedDark\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableBordered } from \"./TableSourceCode\"\r\n\r\nclass TableBordered extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Bordered</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>bordered</code> with table tag for bordered table.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table bordered responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableBordered}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableBordered\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableBorderless } from \"./TableSourceCode\"\r\n\r\nclass TableBorderless extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Borderless</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>borderless</code> with table tag for borderless\r\n              table.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table borderless responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableBorderless}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableBorderless\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableHover } from \"./TableSourceCode\"\r\n\r\nclass TableHover extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Hoverable</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>hover</code> with table tag for hoverable table.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table hover responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableHover}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableHover\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableContextual } from \"./TableSourceCode\"\r\n\r\nclass TableContextual extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Contextual</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.table-*</code> with tr tag for contextual table\r\n              rows.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Username</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr className=\"table-active\">\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Mark</td>\r\n                      <td>Otto</td>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr className=\"table-primary\">\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Jacob</td>\r\n                      <td>Thornton</td>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr className=\"table-success\">\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Larry</td>\r\n                      <td>the Bird</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                    <tr className=\"table-info\">\r\n                      <th scope=\"row\">4</th>\r\n                      <td>Adam</td>\r\n                      <td>the adam</td>\r\n                      <td>@adam</td>\r\n                    </tr>\r\n                    <tr className=\"table-danger\">\r\n                      <th scope=\"row\">5</th>\r\n                      <td>Jennifer</td>\r\n                      <td>the jennifer</td>\r\n                      <td>@instagram</td>\r\n                    </tr>\r\n                    <tr className=\"table-warning\">\r\n                      <th scope=\"row\">6</th>\r\n                      <td>Rick</td>\r\n                      <td>the rick</td>\r\n                      <td>@facebook</td>\r\n                    </tr>\r\n                    <tr className=\"table-light\">\r\n                      <th scope=\"row\">7</th>\r\n                      <td>Ellie</td>\r\n                      <td>the ellie</td>\r\n                      <td>@twitter</td>\r\n                    </tr>\r\n                    <tr className=\"table-dark\">\r\n                      <th scope=\"row\">8</th>\r\n                      <td>Lana</td>\r\n                      <td>the lana</td>\r\n                      <td>@instagram</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableContextual}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableContextual\r\n","import React from \"react\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { tableResponsive } from \"./TableSourceCode\"\r\n\r\nclass TableResponsive extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Responsive</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>responsive</code> with table tag for responsive\r\n              table .\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Table responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                      <th>Table heading</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                      <td>Table cell</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{tableResponsive}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default TableResponsive\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport prism from \"prismjs\"\r\nimport TableBasic from \"./TableBasic\"\r\nimport TableInverse from \"./TableInverse\"\r\nimport TableHeadOption from \"./TableHead\"\r\nimport TableHoverAnimation from \"./TableHoverAnimation\"\r\nimport TableStriped from \"./TableStriped\"\r\nimport TableStripedDark from \"./TableStripedDark\"\r\nimport TableBordered from \"./TableBordered\"\r\nimport TableBorderless from \"./TableBorderless\"\r\nimport TableHover from \"./TableHover\"\r\nimport TableContextual from \"./TableContextual\"\r\nimport TableResponsive from \"./TableResponsive\"\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\n\r\nclass Tables extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    prism.highlightAll()\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Reactstrap Tables\"\r\n          breadCrumbParent=\"Forms & Tables\"\r\n          breadCrumbActive=\"Tables\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <TableBasic />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableInverse />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableHeadOption />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableHoverAnimation />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableStriped />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableStripedDark />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableBordered />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableBorderless />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableHover />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableContextual />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <TableResponsive />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tables\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}