{"version":3,"sources":["redux/actions/data-list/index.js","views/ui-elements/data-list/DataListSidebar.js","views/ui-elements/data-list/DataListConfig.js","components/@vuexy/checkbox/CheckboxesVuexy.js","components/@vuexy/chips/ChipComponent.js"],"names":["getData","params","dispatch","axios","get","then","response","type","data","totalPages","DataListSidebar","state","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","obj","props","updateData","addData","Object","keys","dataParams","length","page","perPage","handleSidebar","prevProps","prevState","this","setState","show","className","classnames","size","onClick","options","wheelPropagation","thumbView","FormGroup","src","alt","htmlFor","color","hidden","onChange","e","URL","createObjectURL","target","files","Button","Label","for","Input","value","placeholder","outline","Component","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","UncontrolledDropdown","DropdownToggle","DropdownMenu","tag","right","DropdownItem","index","total","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","minWidth","cell","title","Progress","text","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","filterData","undefined","history","push","boolean","deleteData","urlPrefix","parseInt","handlePagination","getInitialData","height","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","label","dataList","filteredData","connect","post","getState","CheckBoxesVuexy","defaultChecked","checked","disabled","React","Chip","closeChip","closest","remove","avatarImg","avatarText","avatarIcon","avatarColor","width","closable","closableIcon"],"mappings":"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","file":"static/js/25.71809f21.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport const getData = params => {\r\n  return async dispatch => {\r\n    await axios.get(\"/api/datalist/data\", params).then(response => {\r\n      dispatch({\r\n        type: \"GET_DATA\",\r\n        data: response.data.data,\r\n        totalPages: response.data.totalPages,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  return async dispatch => {\r\n    await axios.get(\"/api/datalist/initial-data\").then(response => {\r\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterData = value => {\r\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/datalist/delete-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"DELETE_DATA\", obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateData = obj => {\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .post(\"/api/datalist/update-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"UPDATE_DATA\", obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const addData = obj => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().dataList.params\r\n    axios\r\n      .post(\"/api/datalist/add-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"ADD_DATA\", obj })\r\n        dispatch(getData(params))\r\n      })\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport classnames from \"classnames\"\r\n\r\nclass DataListSidebar extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    category: \"Audio\",\r\n    order_status: \"pending\",\r\n    price: \"\",\r\n    img: \"\",\r\n    popularity: {\r\n      popValue: \"\"\r\n    }\r\n  }\r\n\r\n  addNew = false\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.data !== null && prevProps.data === null) {\r\n      if (this.props.data.id !== prevState.id) {\r\n        this.setState({ id: this.props.data.id })\r\n      }\r\n      if (this.props.data.name !== prevState.name) {\r\n        this.setState({ name: this.props.data.name })\r\n      }\r\n      if (this.props.data.category !== prevState.category) {\r\n        this.setState({ category: this.props.data.category })\r\n      }\r\n      if (this.props.data.popularity.popValue !== prevState.popularity) {\r\n        this.setState({\r\n          popularity: {\r\n            ...this.state.popularity,\r\n            popValue: this.props.data.popularity.popValue\r\n          }\r\n        })\r\n      }\r\n      if (this.props.data.order_status !== prevState.order_status) {\r\n        this.setState({ order_status: this.props.data.order_status })\r\n      }\r\n      if (this.props.data.price !== prevState.price) {\r\n        this.setState({ price: this.props.data.price })\r\n      }\r\n      if (this.props.data.img !== prevState.img) {\r\n        this.setState({ img: this.props.data.img })\r\n      }\r\n    }\r\n    if (this.props.data === null && prevProps.data !== null) {\r\n      this.setState({\r\n        id: \"\",\r\n        name: \"\",\r\n        category: \"Audio\",\r\n        order_status: \"pending\",\r\n        price: \"\",\r\n        img: \"\",\r\n        popularity: {\r\n          popValue: \"\"\r\n        }\r\n      })\r\n    }\r\n    if (this.addNew) {\r\n      this.setState({\r\n        id: \"\",\r\n        name: \"\",\r\n        category: \"Audio\",\r\n        order_status: \"pending\",\r\n        price: \"\",\r\n        img: \"\",\r\n        popularity: {\r\n          popValue: \"\"\r\n        }\r\n      })\r\n    }\r\n    this.addNew = false\r\n  }\r\n\r\n  handleSubmit = obj => {\r\n    if (this.props.data !== null) {\r\n      this.props.updateData(obj)\r\n    } else {\r\n      this.addNew = true\r\n      this.props.addData(obj)\r\n    }\r\n    let params = Object.keys(this.props.dataParams).length\r\n      ? this.props.dataParams\r\n      : { page: 1, perPage: 4 }\r\n    this.props.handleSidebar(false, true)\r\n    this.props.getData(params)\r\n  }\r\n\r\n  render() {\r\n    let { show, handleSidebar, data } = this.props\r\n    let { name, category, order_status, price, popularity, img } = this.state\r\n    return (\r\n      <div\r\n        className={classnames(\"data-list-sidebar\", {\r\n          show: show\r\n        })}>\r\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\r\n          <h4>{data !== null ? \"UPDATE DATA\" : \"ADD NEW DATA\"}</h4>\r\n          <X size={20} onClick={() => handleSidebar(false, true)} />\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"data-list-fields px-2 mt-3\"\r\n          options={{ wheelPropagation: false }}>\r\n          {this.props.thumbView && img.length ? (\r\n            <FormGroup className=\"text-center\">\r\n              <img className=\"img-fluid\" src={img} alt={name} />\r\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\r\n                <label\r\n                  className=\"btn btn-flat-primary\"\r\n                  htmlFor=\"update-image\"\r\n                  color=\"primary\">\r\n                  Upload Image\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"update-image\"\r\n                    hidden\r\n                    onChange={e =>\r\n                      this.setState({\r\n                        img: URL.createObjectURL(e.target.files[0])\r\n                      })\r\n                    }\r\n                  />\r\n                </label>\r\n                <Button\r\n                  color=\"flat-danger\"\r\n                  onClick={() => this.setState({ img: \"\" })}>\r\n                  Remove Image\r\n                </Button>\r\n              </div>\r\n            </FormGroup>\r\n          ) : null}\r\n          <FormGroup>\r\n            <Label for=\"data-name\">Name</Label>\r\n            <Input\r\n              type=\"text\"\r\n              value={name}\r\n              placeholder=\"Apple IphoneX\"\r\n              onChange={e => this.setState({ name: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-category\">Category</Label>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"data-category\"\r\n              value={category}\r\n              onChange={e => this.setState({ category: e.target.value })}>\r\n              <option>Audio</option>\r\n              <option>Computers</option>\r\n              <option>Fitness</option>\r\n              <option>Appliances</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-popularity\">Popularity</Label>\r\n            <Input\r\n              type=\"number\"\r\n              value={popularity.popValue}\r\n              id=\"data-popularity\"\r\n              placeholder=\"0 - 100%\"\r\n              onChange={e =>\r\n                this.setState({\r\n                  popularity: { popularity, popValue: e.target.value }\r\n                })\r\n              }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-status\">Order Status</Label>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"data-status\"\r\n              value={order_status}\r\n              onChange={e => this.setState({ order_status: e.target.value })}>\r\n              <option>pending</option>\r\n              <option>canceled</option>\r\n              <option>delivered</option>\r\n              <option>on hold</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-price\">Price</Label>\r\n            <Input\r\n              type=\"number\"\r\n              value={price}\r\n              onChange={e => this.setState({ price: e.target.value })}\r\n              id=\"data-price\"\r\n              placeholder=\"69.99\"\r\n            />\r\n          </FormGroup>\r\n          {this.props.thumbView && img.length <= 0 ? (\r\n            <label\r\n              className=\"btn btn-primary\"\r\n              htmlFor=\"upload-image\"\r\n              color=\"primary\">\r\n              Upload Image\r\n              <input\r\n                type=\"file\"\r\n                id=\"upload-image\"\r\n                hidden\r\n                onChange={e =>\r\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\r\n                }\r\n              />\r\n            </label>\r\n          ) : null}\r\n        </PerfectScrollbar>\r\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\r\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\r\n            {data !== null ? \"Update\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            className=\"ml-1\"\r\n            color=\"danger\"\r\n            outline\r\n            onClick={() => handleSidebar(false, true)}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DataListSidebar\r\n","import React, { Component } from \"react\"\r\nimport {\r\n  Button,\r\n  Progress,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  Input\r\n} from \"reactstrap\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport classnames from \"classnames\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { history } from \"../../../history\"\r\nimport {\r\n  Edit,\r\n  Trash,\r\n  ChevronDown,\r\n  Plus,\r\n  Check,\r\n  ChevronLeft,\r\n  ChevronRight\r\n} from \"react-feather\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getData,\r\n  getInitialData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  filterData\r\n} from \"../../../redux/actions/data-list/\"\r\nimport Sidebar from \"./DataListSidebar\"\r\nimport Chip from \"../../../components/@vuexy/chips/ChipComponent\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\n\r\nimport \"../../../assets/scss/plugins/extensions/react-paginate.scss\"\r\nimport \"../../../assets/scss/pages/data-list.scss\"\r\n\r\nconst chipColors = {\r\n  \"on hold\": \"warning\",\r\n  delivered: \"success\",\r\n  pending: \"primary\",\r\n  canceled: \"danger\"\r\n}\r\n\r\nconst selectedStyle = {\r\n  rows: {\r\n    selectedHighlighStyle: {\r\n      backgroundColor: \"rgba(115,103,240,.05)\",\r\n      color: \"#7367F0 !important\",\r\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\r\n      \"&:hover\": {\r\n        transform: \"translateY(0px) !important\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst ActionsComponent = props => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      <Edit\r\n        className=\"cursor-pointer mr-1\"\r\n        size={20}\r\n        onClick={() => {\r\n          return props.currentData(props.row)\r\n        }}\r\n      />\r\n      <Trash\r\n        className=\"cursor-pointer\"\r\n        size={20}\r\n        onClick={() => {\r\n          props.deleteRow(props.row)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomHeader = props => {\r\n  return (\r\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\r\n      <div className=\"actions-left d-flex flex-wrap\">\r\n        <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\r\n          <DropdownToggle className=\"p-1\" color=\"primary\">\r\n            <span className=\"align-middle mr-1\">Actions</span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\r\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\r\n            <DropdownItem tag=\"a\">Print</DropdownItem>\r\n            <DropdownItem tag=\"a\">Export</DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n        <Button\r\n          className=\"add-new-btn\"\r\n          color=\"primary\"\r\n          onClick={() => props.handleSidebar(true, true)}\r\n          outline>\r\n          <Plus size={15} />\r\n          <span className=\"align-middle\">Add New</span>\r\n        </Button>\r\n      </div>\r\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\r\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\r\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\r\n            <span className=\"align-middle mx-50\">\r\n              {`${props.index[0]} - ${props.index[1]} of ${props.total}`}\r\n            </span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\r\n              4\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\r\n              10\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\r\n              15\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\r\n              20\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n        <div className=\"filter-section\">\r\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass DataListConfig extends Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.dataList.data.length !== state.data.length ||\r\n      state.currentPage !== props.parsedFilter.page\r\n    ) {\r\n      return {\r\n        data: props.dataList.data,\r\n        allData: props.dataList.filteredData,\r\n        totalPages: props.dataList.totalPages,\r\n        currentPage: parseInt(props.parsedFilter.page) - 1,\r\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\r\n        totalRecords: props.dataList.totalRecords,\r\n        sortIndex: props.dataList.sortIndex\r\n      }\r\n    }\r\n\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    data: [],\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    columns: [\r\n      {\r\n        name: \"Name\",\r\n        selector: \"name\",\r\n        sortable: true,\r\n        minWidth: \"300px\",\r\n        cell: row => (\r\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n            {row.name}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: \"Category\",\r\n        selector: \"category\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Popularity\",\r\n        selector: \"popularity\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <Progress\r\n            className=\"w-100 mb-0\"\r\n            color={row.popularity.color}\r\n            value={row.popularity.popValue}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: \"Order Status\",\r\n        selector: \"order_status\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <Chip\r\n            className=\"m-0\"\r\n            color={chipColors[row.order_status]}\r\n            text={row.order_status}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: \"Price\",\r\n        selector: \"price\",\r\n        sortable: true,\r\n        cell: row => `$${row.price}`\r\n      },\r\n      {\r\n        name: \"Actions\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <ActionsComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    allData: [],\r\n    value: \"\",\r\n    rowsPerPage: 4,\r\n    sidebar: false,\r\n    currentData: null,\r\n    selected: [],\r\n    totalRecords: 0,\r\n    sortIndex: [],\r\n    addNew: \"\"\r\n  }\r\n\r\n  thumbView = this.props.thumbView\r\n\r\n  componentDidMount() {\r\n    this.props.getData(this.props.parsedFilter)\r\n    this.props.getInitialData()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.thumbView) {\r\n      this.thumbView = false\r\n      let columns = [\r\n        {\r\n          name: \"Image\",\r\n          selector: \"img\",\r\n          minWidth: \"220px\",\r\n          cell: row => <img src={row.img} height=\"100\" alt={row.name} />\r\n        },\r\n        {\r\n          name: \"Name\",\r\n          selector: \"name\",\r\n          sortable: true,\r\n          minWidth: \"250px\",\r\n          cell: row => (\r\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n              {row.name}\r\n            </p>\r\n          )\r\n        },\r\n        {\r\n          name: \"Category\",\r\n          selector: \"category\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Popularity\",\r\n          selector: \"popularity\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <Progress\r\n              className=\"w-100 mb-0\"\r\n              color={row.popularity.color}\r\n              value={row.popularity.popValue}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: \"Order Status\",\r\n          selector: \"order_status\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <Chip\r\n              className=\"m-0\"\r\n              color={chipColors[row.order_status]}\r\n              text={row.order_status}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: \"Price\",\r\n          selector: \"price\",\r\n          sortable: true,\r\n          cell: row => `$${row.price}`\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <ActionsComponent\r\n              row={row}\r\n              getData={this.props.getData}\r\n              parsedFilter={this.props.parsedFilter}\r\n              currentData={this.handleCurrentData}\r\n              deleteRow={this.handleDelete}\r\n            />\r\n          )\r\n        }\r\n      ]\r\n      this.setState({ columns })\r\n    }\r\n  }\r\n\r\n  handleFilter = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.filterData(e.target.value)\r\n  }\r\n\r\n  handleRowsPerPage = value => {\r\n    let { parsedFilter, getData } = this.props\r\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\r\n    history.push(`/data-list/list-view?page=${page}&perPage=${value}`)\r\n    this.setState({ rowsPerPage: value })\r\n    getData({ page: parsedFilter.page, perPage: value })\r\n  }\r\n\r\n  handleSidebar = (boolean, addNew = false) => {\r\n    this.setState({ sidebar: boolean })\r\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\r\n  }\r\n\r\n  handleDelete = row => {\r\n    this.props.deleteData(row)\r\n    this.props.getData(this.props.parsedFilter)\r\n    if (this.state.data.length - 1 === 0) {\r\n      let urlPrefix = this.props.thumbView\r\n        ? \"/data-list/thumb-view/\"\r\n        : \"/data-list/list-view/\"\r\n      history.push(\r\n        `${urlPrefix}list-view?page=${parseInt(\r\n          this.props.parsedFilter.page - 1\r\n        )}&perPage=${this.props.parsedFilter.perPage}`\r\n      )\r\n      this.props.getData({\r\n        page: this.props.parsedFilter.page - 1,\r\n        perPage: this.props.parsedFilter.perPage\r\n      })\r\n    }\r\n  }\r\n\r\n  handleCurrentData = obj => {\r\n    this.setState({ currentData: obj })\r\n    this.handleSidebar(true)\r\n  }\r\n\r\n  handlePagination = page => {\r\n    let { parsedFilter, getData } = this.props\r\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\r\n    let urlPrefix = this.props.thumbView\r\n      ? \"/data-list/thumb-view/\"\r\n      : \"/data-list/list-view/\"\r\n    history.push(\r\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\r\n    )\r\n    getData({ page: page.selected + 1, perPage: perPage })\r\n    this.setState({ currentPage: page.selected })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      columns,\r\n      data,\r\n      allData,\r\n      totalPages,\r\n      value,\r\n      rowsPerPage,\r\n      currentData,\r\n      sidebar,\r\n      totalRecords,\r\n      sortIndex\r\n    } = this.state\r\n    return (\r\n      <div\r\n        className={`data-list ${\r\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\r\n        }`}>\r\n        <DataTable\r\n          columns={columns}\r\n          data={value.length ? allData : data}\r\n          pagination\r\n          paginationServer\r\n          paginationComponent={() => (\r\n            <ReactPaginate\r\n              previousLabel={<ChevronLeft size={15} />}\r\n              nextLabel={<ChevronRight size={15} />}\r\n              breakLabel=\"...\"\r\n              breakClassName=\"break-me\"\r\n              pageCount={totalPages}\r\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\r\n              activeClassName=\"active\"\r\n              forcePage={\r\n                this.props.parsedFilter.page\r\n                  ? parseInt(this.props.parsedFilter.page - 1)\r\n                  : 0\r\n              }\r\n              onPageChange={page => this.handlePagination(page)}\r\n            />\r\n          )}\r\n          noHeader\r\n          subHeader\r\n          selectableRows\r\n          responsive\r\n          pointerOnHover\r\n          selectableRowsHighlight\r\n          onSelectedRowsChange={data =>\r\n            this.setState({ selected: data.selectedRows })\r\n          }\r\n          customStyles={selectedStyle}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              handleSidebar={this.handleSidebar}\r\n              handleFilter={this.handleFilter}\r\n              handleRowsPerPage={this.handleRowsPerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              total={totalRecords}\r\n              index={sortIndex}\r\n            />\r\n          }\r\n          sortIcon={<ChevronDown />}\r\n          selectableRowsComponent={Checkbox}\r\n          selectableRowsComponentProps={{\r\n            color: \"primary\",\r\n            icon: <Check className=\"vx-icon\" size={12} />,\r\n            label: \"\",\r\n            size: \"sm\"\r\n          }}\r\n        />\r\n        <Sidebar\r\n          show={sidebar}\r\n          data={currentData}\r\n          updateData={this.props.updateData}\r\n          addData={this.props.addData}\r\n          handleSidebar={this.handleSidebar}\r\n          thumbView={this.props.thumbView}\r\n          getData={this.props.getData}\r\n          dataParams={this.props.parsedFilter}\r\n          addNew={this.state.addNew}\r\n        />\r\n        <div\r\n          className={classnames(\"data-list-overlay\", {\r\n            show: sidebar\r\n          })}\r\n          onClick={() => this.handleSidebar(false, true)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dataList: state.dataList\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  getInitialData,\r\n  filterData\r\n})(DataListConfig)\r\n","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nclass Chip extends React.Component {\r\n  closeChip = e => {\r\n    e.target.closest(\".chip\").remove()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`chip ${this.props.className} ${\r\n          this.props.color ? `chip-${this.props.color}` : null\r\n        }`}\r\n      >\r\n        <div className=\"chip-body\">\r\n          {(!this.props.avatarImg && this.props.avatarText) ||\r\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\r\n            <div\r\n              className={`avatar ${\r\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\r\n              }`}\r\n            >\r\n              <div className=\"avatar-content\">\r\n                {this.props.avatarText ? this.props.avatarText : null}\r\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\r\n              </div>\r\n            </div>\r\n          ) : this.props.avatarImg ? (\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={this.props.avatarImg}\r\n                alt=\"chipImg\"\r\n                height=\"20\"\r\n                width=\"20\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"chip-text\">{this.props.text}</div>\r\n          {this.props.closable ? (\r\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\r\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chip\r\n"],"sourceRoot":""}